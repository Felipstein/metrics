generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workspace {
  id        String   @id @default(cuid())
  ownerId   String   @map("owner_id")
  name      String
  slug      String   @unique
  color     String   @default("#3337ff")
  logoUrl   String   @map("logo_url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  members     WorkspaceMembership[]
  invitations Invitation[]

  @@map("workspaces")
}

enum WorkspaceMembershipRole {
  MANAGER
  WORKER
}

model WorkspaceMembership {
  userId      String                  @map("user_id")
  workspaceId String                  @map("workspace_id")
  role        WorkspaceMembershipRole

  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  @@id([userId, workspaceId])
  @@map("workspace_members")
}

model Invitation {
  id          String                  @id @default(cuid())
  userId      String                  @map("user_id")
  workspaceId String                  @map("workspace_id")
  role        WorkspaceMembershipRole
  createdById String?                 @map("created_by_id")
  message     String?
  createdAt   DateTime                @default(now()) @map("created_at")
  expireAt    DateTime                @map("expire_at")

  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  @@unique([userId, workspaceId])
  @@map("invitations")
}
